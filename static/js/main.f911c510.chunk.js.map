{"version":3,"sources":["assets/tom-lamb.svg","helpers/ThemeProvider.js","components/SwitchToggle/SwitchToggle.js","components/Header.js","components/CurrencyCard.js","helpers/fetchData.js","components/EmailForm.js","components/Main.js","assets/github-dark.svg","assets/github-light.svg","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["ThemeContext","createContext","ThemeProvider","children","useState","localStorage","theme","JSON","parse","setTheme","useEffect","stringify","toggle","handleThemeToggle","Provider","value","SwitchToggle","useContext","type","className","onChange","name","id","checked","htmlFor","Header","src","logo","alt","CurrencyCard","details","initials","rate","fetchData","fetch","then","response","json","EmailForm","email","setEmail","error","setError","emailSent","setEmailSent","onSubmit","e","preventDefault","method","headers","body","data","console","log","catch","target","placeholder","Main","currencies","setCurrencies","counter","setCounter","rates","intervalId","setInterval","clearInterval","map","el","Footer","href","rel","githubLight","githubDark","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f911c510.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/tom-lamb.04182375.svg\";","import React, { createContext, useState, useEffect } from 'react';\n\nconst ThemeContext = createContext();\n\nconst ThemeProvider = ({ children }) => {\n  const [theme, setTheme] = useState(localStorage.theme ? JSON.parse(localStorage.theme) : 'light');\n\n  useEffect(() => {\n    localStorage.theme = JSON.stringify(theme);\n  }, [theme]);\n\n  const handleThemeToggle = () => {\n    if (theme === 'light') {\n      setTheme('dark');\n    } else {\n      setTheme('light');\n    }\n  };\n\n  const toggle = {\n    theme,\n    handleThemeToggle,\n  };\n\n  return (\n    <ThemeContext.Provider value={toggle}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n\nexport { ThemeContext, ThemeProvider };\n","import React, { useContext } from 'react';\nimport './SwitchToggle.scss';\nimport { ThemeContext } from '../../helpers/ThemeProvider';\n\n/* eslint-disable */\nconst SwitchToggle = () => {\n  const { theme, handleThemeToggle } = useContext(ThemeContext);\n\n  return (\n    <>\n      <form type=\"submit\" className=\"switch\">\n        <input\n          type=\"checkbox\"\n          className=\"switch-checkbox\"\n          onChange={handleThemeToggle}\n          name=\"themeToggle\"\n          id=\"themeToggle\"\n          checked={theme === 'dark'} \n          />\n        <label className=\"switch-label\" htmlFor=\"themeToggle\">\n          <span className=\"switch-inner\" />\n          <span className=\"switch-switch\" />\n        </label>\n      </form>\n    </>\n  );\n};\n\nexport default SwitchToggle;\n","import React, { useContext } from 'react';\nimport logo from '../assets/tom-lamb.svg';\nimport SwitchToggle from './SwitchToggle/SwitchToggle';\nimport { ThemeContext } from '../helpers/ThemeProvider';\n\nconst Header = () => {\n  const { theme } = useContext(ThemeContext);\n  return (\n    <>\n      <header className={`header ${theme}`}>\n        <nav className=\"header__container\">\n          <img className=\"header__img\" src={logo} alt=\"Tom Lamb logo: Yellow initials in a dark coloured container\" />\n          <h1 className=\"header__title\">Currencies</h1>\n          <SwitchToggle />\n        </nav>\n      </header>\n    </>\n  );\n};\n\nexport default Header;\n","import React, { useContext } from 'react';\nimport { ThemeContext } from '../helpers/ThemeProvider';\n\nconst path = process.env.NODE_ENV === 'production'\n  ? 'https://currency-app-api.herokuapp.com/'\n  : 'http://localhost:8080';\n\nconst CurrencyCard = ({ details }) => {\n  const { theme } = useContext(ThemeContext);\n\n  return (\n    <>\n      <article className={`article ${theme}`}>\n        <div className=\"article__details\">\n          <img className=\"article__img\" src={`${path}${details.logo}`} alt=\"\" />\n          <div className=\"article__content\">\n            <h2 className=\"article__title\">{details.initials}</h2>\n            <p className=\"article__subtitle\">{details.name}</p>\n          </div>\n        </div>\n        <div className=\"article__rates\">\n          <p className=\"article__rate\">{details.rate}</p>\n          <p className=\"article__subtitle\">{`1 EUR = ${details.rate}`}</p>\n        </div>\n      </article>\n    </>\n  );\n};\n\nexport default CurrencyCard;\n","const server = process.env.NODE_ENV === 'production'\n  ? 'https://currency-app-api.herokuapp.com/currencies'\n  : 'http://localhost:8080/currencies';\n\nconst fetchData = () => fetch(server)\n  .then(response => response.json());\n\nexport default fetchData;\n","import React, { useState, useContext } from 'react';\nimport { ThemeContext } from '../helpers/ThemeProvider';\n\nconst serverAddress = process.env.NODE_ENV === 'production'\n  ? 'https://currency-app-api.herokuapp.com/addEmail'\n  : 'http://localhost:8080/addEmail';\n\nconst EmailForm = () => {\n  const { theme } = useContext(ThemeContext);\n  const [email, setEmail] = useState('');\n  const [error, setError] = useState(false);\n  const [emailSent, setEmailSent] = useState(false);\n\n  const handleEmailChange = e => {\n    setEmail(e.target.value);\n    setError(false);\n  };\n\n  const handleFormSubmit = e => {\n    e.preventDefault();\n    if (email === '') {\n      setError(true);\n      setEmailSent(false);\n    } else {\n      setError(false);\n      fetch(serverAddress, {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json',\n        },\n        body: JSON.stringify({ email }),\n      })\n        .then(response => response.json())\n        .then(data => {\n          console.log(data);\n          setEmailSent(true);\n        })\n        .catch(() => {\n          setError(true);\n          setEmailSent(false);\n        });\n    }\n  };\n\n  return (\n    <section className={`form__container ${theme}`}>\n      {error && <p className=\"form__errorMessage\">Please enter a valid email address.</p>}\n      {emailSent && <p className=\"form__validMessage\">Congrats email registered!</p>}\n      <form className=\"form\" onSubmit={handleFormSubmit}>\n        <h3>Receive updates by Email</h3>\n        <input className=\"form__input\" type=\"text\" onChange={handleEmailChange} value={email} placeholder=\"Enter your email\" />\n        <button className=\"form__btn\" type=\"submit\">Register</button>\n      </form>\n    </section>\n  );\n};\n\nexport default EmailForm;\n","import React, { useEffect, useState, useContext } from 'react';\nimport CurrencyCard from './CurrencyCard';\nimport fetchData from '../helpers/fetchData';\nimport { ThemeContext } from '../helpers/ThemeProvider';\nimport EmailForm from './EmailForm';\n\nconst Main = () => {\n  const { theme } = useContext(ThemeContext);\n  const [currencies, setCurrencies] = useState([]);\n  const [counter, setCounter] = useState(60);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    fetchData()\n      .then(data => {\n        setCurrencies(data.rates);\n      })\n      .catch(() => {\n        setError(true);\n      });\n  }, []);\n\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      if (counter > 1) {\n        setCounter(counter - 1);\n      } else {\n        setCounter(60);\n        fetchData()\n          .then(data => {\n            setCurrencies(data.rates);\n          })\n          .catch(() => {\n            setError(true);\n          });\n      }\n    }, 1000);\n    return () => {\n      clearInterval(intervalId);\n    };\n  });\n\n  return (\n    <>\n      <main className={`main ${theme}`}>\n        <section className=\"main__container\">\n          <EmailForm />\n          <p className={`counter ${theme}`}>{`${counter} seconds until refresh...`}</p>\n          {currencies && currencies\n            .map(el => <CurrencyCard key={el.name} details={el} />) }\n          {error && <p className=\"error__message\">There has been an error. Please try again.</p>}\n        </section>\n      </main>\n    </>\n  );\n};\n\nexport default Main;\n","export default __webpack_public_path__ + \"static/media/github-dark.2a516804.svg\";","export default __webpack_public_path__ + \"static/media/github-light.02f4c054.svg\";","import React, { useContext } from 'react';\nimport { ThemeContext } from '../helpers/ThemeProvider';\nimport githubDark from '../assets/github-dark.svg';\nimport githubLight from '../assets/github-light.svg';\n\nconst Footer = () => {\n  const { theme } = useContext(ThemeContext);\n  return (\n    <>\n      <footer className={`footer ${theme}`}>\n        <a href=\"https://github.com/Lambtsa/currency-app-react\" rel=\"noreferrer\" target=\"_blank\">\n          <img className=\"footer__img\" src={theme === 'dark' ? githubLight : githubDark} alt={`Github logo ${theme}`} />\n        </a>\n      </footer>\n    </>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\nimport './styles.scss';\n\nimport Header from './components/Header';\nimport Main from './components/Main';\nimport Footer from './components/Footer';\nimport { ThemeProvider } from './helpers/ThemeProvider';\n\nfunction App() {\n  return (\n    <ThemeProvider>\n      <Header />\n      <Main />\n      <Footer />\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}